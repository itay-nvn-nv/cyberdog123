name: Docker Build and Push

on:
  push:
    branches: [ main ]
  workflow_dispatch:

env:
  DOCKERHUB_USERNAME: ${{ secrets.DOCKER_USERNAME }}
  DOCKERHUB_TOKEN: ${{ secrets.DOCKER_PASSWORD }}
  DOCKERHUB_REPO: cyberdog123

jobs:
  find-dockerfiles:
    runs-on: ubuntu-latest
    outputs:
      dockerfiles: ${{ steps.set-matrix.outputs.dockerfiles }}
    steps:
      - uses: actions/checkout@v4
      
      - id: set-matrix
        run: |
          echo "dockerfiles=$(find . -type f -name "*.Dockerfile" | sed 's/^\.\///' | jq -R -s -c 'split("\n")[:-1]')" >> $GITHUB_OUTPUT

  build:
    needs: find-dockerfiles
    runs-on: ubuntu-latest
    strategy:
      matrix:
        dockerfile: ${{ fromJson(needs.find-dockerfiles.outputs.dockerfiles) }}
      fail-fast: false
    outputs:
      image_names: ${{ steps.set-image.outputs.image_names }}
    steps:
      - uses: actions/checkout@v4

      - name: Login to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ env.DOCKERHUB_USERNAME }}
          password: ${{ env.DOCKERHUB_TOKEN }}

      - name: Build Docker Image
        id: set-image
        run: |
          dockerfile="${{ matrix.dockerfile }}"
          image_name=$(basename "$dockerfile" .Dockerfile)
          full_image_name="${{ env.DOCKERHUB_REPO }}/$image_name:latest"
          
          echo "image_name=$image_name" >> $GITHUB_OUTPUT
          echo "Building $dockerfile as $full_image_name"
          
          docker build -t "$full_image_name" \
                      -f "$dockerfile" \
                      "$(dirname "$dockerfile")"

  push:
    needs: build
    runs-on: ubuntu-latest
    strategy:
      matrix:
        dockerfile: ${{ fromJson(needs.find-dockerfiles.outputs.dockerfiles) }}
      fail-fast: false
    steps:
      - name: Login to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ env.DOCKERHUB_USERNAME }}
          password: ${{ env.DOCKERHUB_TOKEN }}

      - name: Push Docker Image
        run: |
          dockerfile="${{ matrix.dockerfile }}"
          image_name=$(basename "$dockerfile" .Dockerfile)
          full_image_name="${{ env.DOCKERHUB_REPO }}/$image_name:latest"
          
          echo "Pushing $full_image_name"
          docker push "$full_image_name"

  patch-dockerhub:
    needs: [build, push]
    runs-on: ubuntu-latest
    strategy:
      matrix:
        dockerfile: ${{ fromJson(needs.find-dockerfiles.outputs.dockerfiles) }}
      fail-fast: false
    steps:
      - uses: actions/checkout@v4
      
      - name: Update DockerHub Description
        run: |
          dockerfile="${{ matrix.dockerfile }}"
          image_name=$(basename "$dockerfile" .Dockerfile)
          
          description="Built from $dockerfile"
          if [ -f "$(dirname "$dockerfile")/dockerfile-description.md" ]; then
            description=$(cat "$(dirname "$dockerfile")/dockerfile-description.md")
          fi
          
          echo "Updating description for $image_name"
          
          curl -X PATCH \
            "https://hub.docker.com/v2/repositories/${{ env.DOCKERHUB_REPO }}/$image_name/" \
            -H "Authorization: JWT $DOCKERHUB_TOKEN" \
            -H "Content-Type: application/json" \
            --data-raw "{
              \"description\": \"$description\",
              \"full_description\": \"$description\"
            }"