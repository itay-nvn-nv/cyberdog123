name: Build and Push Docker Image

on:
  workflow_dispatch:  # Allows manual triggering from the GitHub UI
  push:
    branches:
      - main  # Trigger on push to main branch (you can change this to any branch you prefer)

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: Log in to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Generate Dockerfile matrix
      id: generate-matrix
      run: |
        echo "Generating matrix..."
        dockerfiles=$(find . -name '*.Dockerfile')
        matrix="{\"include\":["
        for dockerfile in $dockerfiles; do
          image_name="docker.io/cyberdog123/$(basename ${dockerfile%.*}):latest"
          matrix="${matrix}{\"dockerfile_path\":\"$dockerfile\",\"image_name\":\"$image_name\"},"
        done
        matrix="${matrix%,}]}"
        echo "matrix=$matrix" >> $GITHUB_ENV
        echo $matrix

    - name: Build and Push Docker Images
      run: |
        echo ${{ steps.generate-matrix.outputs.matrix }}
        echo "Building and pushing Docker images..."
        matrix=$(echo "${{ steps.generate-matrix.outputs.matrix }}" | jq -c '.')
        for dockerfile in $(jq -r '.include[].dockerfile_path' <<< "$matrix"); do
          image_name=$(jq -r ".include[] | select(.dockerfile_path==\"$dockerfile\") | .image_name" <<< "$matrix")
          docker build -f $dockerfile -t $image_name .
          docker push $image_name

    - name: Set Dockerfile URL in GitHub Repo Overview
      run: |
        echo "Setting Dockerfile URL in GitHub Repo Overview..."
        for dockerfile in $(jq -r '.include[].dockerfile_path' <<< ${{ steps.generate-matrix.outputs.matrix }}); do
          image_name=$(jq -r ".include[] | select(.dockerfile_path==\"$dockerfile\") | .image_name" <<< ${{ steps.generate-matrix.outputs.matrix }})
          repo_name=$(basename ${dockerfile%.*})
          dockerfile_url="https://github.com/${{ github.repository }}/blob/main/$dockerfile"
          curl -X PATCH \
          -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
          -H "Accept: application/vnd.github.v3+json" \
          https://api.github.com/repos/${{ github.repository }}/docker/${repo_name} \
          -d "{\"description\":\"Dockerfile URL: $dockerfile_url\"}"
        done